@page "/Profile/Password"

@using AutoMapper
@using Web.DepotEice.BLL.IServices
@using Web.DepotEice.BLL.Models
@using Web.DepotEice.UIL.Models.Forms

@inject ILogger<Password> Logger;
@inject IUserTokenService UserTokenService;
@inject IUserService UserService;
@inject IMapper Mapper;


<PageTitle>EICE - Changer le mot de passe</PageTitle>

<h3 class="text-center my-5">Créer un nouveau mot de passe</h3>

<div class="container my-5 py-5 bg-light border border-1 d-flex justify-content-center">
    <EditForm Model="_passwordUpdateForm" OnValidSubmit="OnValidSubmit" style="width:50%;">
        <DataAnnotationsValidator />

        <div class="mb-3">
            <label for="current-password" class="form-label">Mot de passe actuel</label>

            <InputText id="current-password" type="password" class="form-control" aria-describedby="mot de passe actuel"
            @bind-Value="_passwordUpdateForm.CurrentPassword" />

            <ValidationMessage class="text-danger" For="@(() => _passwordUpdateForm.CurrentPassword)" />
        </div>

        <div class="mb-3">
            <label for="new-password" class="form-label">Nouveau mot de passe</label>

            <InputText id="new-password" type="password" class="form-control" aria-describedby="nouveau mot de passe"
            @bind-Value="_passwordUpdateForm.NewPassword" />

            <ValidationMessage class="text-danger" For="@(() => _passwordUpdateForm.NewPassword)" />
        </div>

        <div class="mb-3">
            <label for="confirm-new-password" class="form-label">Confirmation du nouveau mot de passe</label>

            <InputText id="confirm-new-password" type="password" class="form-control" aria-describedby="confirmation du nouveau mot de passe"
            @bind-Value="_passwordUpdateForm.ConfirmNewPassword" />

            <ValidationMessage class="text-danger" For="@(() => _passwordUpdateForm.ConfirmNewPassword)" />
        </div>

        <button class="btn btn-outline-primary" type="submit">Envoyer</button>
    </EditForm>
</div>

<Preload />

@code {
    /// <summary>
    /// The password update form.
    /// </summary>
    private PasswordUpdateForm _passwordUpdateForm = new PasswordUpdateForm();

    [Inject]
    public PreloadService? PreloadService { get; set; }

    private async Task OnValidSubmit()
    {
        try
        {
            PreloadService?.Show(SpinnerColor.Dark);

            PasswordUpdateModel passwordUpdate = Mapper.Map<PasswordUpdateModel>(null);

            ResultModel<UserModel> result = await UserService.UpdatePasswordAsync(passwordUpdate);

            if (!result.Success)
            {
                Logger.LogInformation("The update of the password failed.");

            }
        }
        catch (Exception e)
        {
            Logger.LogError($"An exception was thrown when updating the password.\n{e.Message}");
        }
        finally
        {
            PreloadService?.Hide();
        }
    }
}