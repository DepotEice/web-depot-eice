@page "/blog"
@page "/blog/index"

@using AutoMapper;
@using Web.DepotEice.BLL.IServices;
@using Web.DepotEice.UIL.Models;

@inject IArticleService ArticleService;
@inject ILogger<Index> Logger;
@inject IMapper Mapper;

<div class="container body-content">
    @if (Articles is not null)
    {
        <div class="col-lg">

            @foreach (var article in Articles)
            {
                <div class="row justify-content-between p-2 mb-4 border-bottom me-2" style="">
                    <div class="">
                        <h1 class="display-4 fst-italic">
                            <a class="link-dark " href="@($"/blog/article/{article.Id}")">
                                @article.Title
                            </a>
                        </h1>
                        <p class="lead my-3">@((MarkupString)article.BodyNoHTML)</p>
                        <p class="lead mb-0 align-bottom pb-4">
                            <a href="@($"/blog/article/{article.Id}")" class="fw-bold">
                                Continuer à lire...
                            </a>
                        </p>
                    </div>
                </div>
            }

        </div>
    }

    <InfiniteScrolling ItemsProvider="GetArticlesAsync">
        <ItemTemplate Context="article">

            <div class="row justify-content-between p-2 mb-4 border-bottom me-2" style="">
                <div class="">
                    <h1 class="display-5 fst-italic">
                        <a class="link-dark " href="@($"/blog/article/{article.Id}")">
                            @article.Title
                        </a>
                    </h1>
                    <p class="lead my-3">@((MarkupString)article.BodyNoHTML)</p>
                    <p class="lead mb-0 align-bottom pb-4">
                        <a href="@($"/blog/article/{article.Id}")" class="fw-bold">
                            Continuer à lire...
                        </a>
                    </p>
                </div>
            </div>

        </ItemTemplate>
        <LoadingTemplate>
            <h2 class="text-center">Chargement...</h2>
        </LoadingTemplate>
    </InfiniteScrolling>
</div>


@code {
    public IEnumerable<ArticleIndexModel>? Articles { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var result = await ArticleService.GetArticlesAsync();
    }

    private async Task<IEnumerable<ArticleIndexModel>> GetArticlesAsync(InfiniteScrollingItemsProviderRequest request)
    {
        var result = await ArticleService.GetArticlesAsync(skip: request.StartIndex, top: 10);

        if (!result.Success)
        {
            Logger.LogError($"Retrieve articles failed with status code \"{result.Code}\".\n{result.Message}");

            return Enumerable.Empty<ArticleIndexModel>();
        }

        if (result.Data is null)
        {
            Logger.LogError($"The retrieved data is null.\n{result.Message}");

            return Enumerable.Empty<ArticleIndexModel>();
        }

        return Mapper.Map<IEnumerable<ArticleIndexModel>>(result.Data);
    }
}
