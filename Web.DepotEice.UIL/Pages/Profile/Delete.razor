@page "/Profile/Delete"

@using Web.DepotEice.BLL.IServices;
@using Web.DepotEice.BLL.Models;
@using Web.DepotEice.UIL.Managers;

@inject IUserService UserService;
@inject UserManager UserManager;
@inject NavigationManager NavigationManager;
@inject ILogger<Delete> Logger;

<h3 class="text-center my-5">Êtes-vous sûr de vouloir supprimer votre compte ? Cette action est irréversible</h3>
<div class="d-flex justify-content-center">
    <button class="btn btn-danger" type="button" @onclick="OnDeleteAccountClicked">Supprimer mon compte</button>
</div>

<Toasts Class="p-3" Messages="ToastMessages" Delay="5000" />

@code {
    public List<ToastMessage> ToastMessages { get; private set; } = new List<ToastMessage>();

    private async Task OnDeleteAccountClicked()
    {
        ResultModel<bool> resultModel = await UserService.DeleteUserAsync();

        if (!resultModel.Success)
        {
            Logger.LogError(
                "The request to delete the user account failed with status code {code}\n{msg}",
                resultModel.Code,
                resultModel.Message
            );

            ShowMessage(
                ToastType.Danger,
                "Echec de la suppression",
                resultModel.Message!, true
            );

            return;
        }

        await UserManager.SignOutAsync();

        ShowMessage(
            ToastType.Success,
            "Compte supprimé",
            "Votre compte a bien été supprimé, vous serez redirigé dans un instant",
            true
        );

        NavigationManager.NavigateTo("", true);
    }

    /// <summary>
    /// Add a new toast message to the list of toast messages
    /// </summary>
    /// <param name="toastType">The toast message type</param>
    /// <param name="title">The title of the toast message</param>
    /// <param name="message">The body message</param>
    /// <param name="autoHide">Decide if the toast should hide after a delay</param>
    private void ShowMessage(ToastType toastType, string title, string message, bool autoHide)
    {
        var toastMessage = new ToastMessage()
            {
                Type = toastType,
                Title = title,
                Message = message,
                AutoHide = autoHide,
                HelpText = $"{DateTime.Now}",
            };

        ToastMessages.Add(toastMessage);
    }
}
