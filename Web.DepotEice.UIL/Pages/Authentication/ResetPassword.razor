@page "/reset-password/{userId}/{token}"

@using AutoMapper
@using Web.DepotEice.BLL.IServices
@using Web.DepotEice.BLL.Models
@using Web.DepotEice.UIL.Models.Forms

@inject ILogger<ResetPassword> Logger;
@inject IUserTokenService UserTokenService;
@inject IAuthService AuthService;
@inject IMapper Mapper;
@inject NavigationManager NavigationManager;

<PageTitle>Changer de mot de passe</PageTitle>

<h3 class="text-center my-5">Créer un nouveau mot de passe</h3>

<div class="container my-5 py-5 bg-light border border-1">
    <div class="d-flex align-items-center justify-content-center mt-2">

        @if (_tokenIsValid)
        {
            <PasswordUpdate UpdatePassword="_resetPasswordForm" OnFormExecuted="OnValidSubmit" />
        }
        else
        {
            <h4 class"text-center my-5">Le lien n'est plus valide ou a expiré</h4>
        }

    </div>
</div>

@code {
    [Parameter]
    public string UserId { get; set; } = string.Empty;

    [Parameter]
    public string Token { get; set; } = string.Empty;

    private ResetPasswordForm _resetPasswordForm = new();

    private bool _tokenIsValid = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (await UserTokenService.IsValid(Token))
            {
                Logger.LogInformation("Token valid");
                _tokenIsValid = true;
            }
        }
        catch (Exception e)
        {
            Logger.LogError("Token confirmation failed");
            Logger.LogError(e.Message);
        }
    }

    public async Task OnValidSubmit()
    {
        if (_tokenIsValid)
        {
            PasswordResetModel passwordUpdate = Mapper.Map<PasswordResetModel>(_resetPasswordForm);
            passwordUpdate.UserId = UserId;

            bool result = await AuthService.ResetPassword(passwordUpdate, Token);

            if (result)
            {
                Logger.LogInformation("Password successfully updated");
                NavigationManager.NavigateTo("/login");
            }
            else
            {
                Logger.LogError("Password update failed");
            }
        }
        else
        {
            Logger.LogError("The token is invalid or expired");
        }
    }
}
